{"version":3,"sources":["webpack:///path---tags-docker-d334b618dfa3b97243a2.js","webpack:///./.cache/json/tags-docker.json"],"names":["webpackJsonp","369","module","exports","pathContext","posts","html","id","frontmatter","date","path","title","excerpt","tags","tagName"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAUC,KAAA,kiCAAAC,GAAA,mHAAAC,aAAsrCC,KAAA,2BAAAC,KAAA,UAAAC,MAAA,iBAAAC,QAAA,sBAAAC,MAAA,kCAAoJC,QAAA","file":"path---tags-docker-d334b618dfa3b97243a2.js","sourcesContent":["webpackJsonp([197808841186072],{\n\n/***/ 369:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"posts\":[{\"html\":\"<h3>Create a container with a mongo database and connect to it</h3>\\n<p>Start with displaying all currently running containers:</p>\\n<pre><code class=\\\"language-bash\\\">docker ps\\n</code></pre>\\n<p>Then create locally the container associated with the mongo docker image:</p>\\n<pre><code class=\\\"language-bash\\\">docker run -p 27017:27017 -d mongo\\n</code></pre>\\n<p>Executing another time <code>docker ps</code> results in information on the created container like the following being displayed:</p>\\n<pre><code>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                      NAMES\\n2c6a61aba41b        mongo               \\\"docker-entrypoint.s…\\\"   3 minutes ago       Up 3 minutes        0.0.0.0:27017->27017/tcp   clever_dubinsky\\n</code></pre>\\n<p>Connection to the database at url localhost:27017 can be opened using for instance the robo-3t nosql database editor.\\nFinally, the container when not needed anymore can be stopped with:</p>\\n<pre><code>docker stop 2c6a61aba41b\\n</code></pre>\",\"id\":\"/Users/nperon/Documents/workshop/src/pages/2020-03-31-docker-recipes/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2019-03-05T22:35:12.235Z\",\"path\":\"/docker\",\"title\":\"Docker Recipes\",\"excerpt\":\"Some Docker Recipes\",\"tags\":[\"docker\",\"container\",\"devops\"]}}],\"tagName\":\"docker\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tags-docker-d334b618dfa3b97243a2.js","module.exports = {\"pathContext\":{\"posts\":[{\"html\":\"<h3>Create a container with a mongo database and connect to it</h3>\\n<p>Start with displaying all currently running containers:</p>\\n<pre><code class=\\\"language-bash\\\">docker ps\\n</code></pre>\\n<p>Then create locally the container associated with the mongo docker image:</p>\\n<pre><code class=\\\"language-bash\\\">docker run -p 27017:27017 -d mongo\\n</code></pre>\\n<p>Executing another time <code>docker ps</code> results in information on the created container like the following being displayed:</p>\\n<pre><code>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                      NAMES\\n2c6a61aba41b        mongo               \\\"docker-entrypoint.s…\\\"   3 minutes ago       Up 3 minutes        0.0.0.0:27017->27017/tcp   clever_dubinsky\\n</code></pre>\\n<p>Connection to the database at url localhost:27017 can be opened using for instance the robo-3t nosql database editor.\\nFinally, the container when not needed anymore can be stopped with:</p>\\n<pre><code>docker stop 2c6a61aba41b\\n</code></pre>\",\"id\":\"/Users/nperon/Documents/workshop/src/pages/2020-03-31-docker-recipes/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2019-03-05T22:35:12.235Z\",\"path\":\"/docker\",\"title\":\"Docker Recipes\",\"excerpt\":\"Some Docker Recipes\",\"tags\":[\"docker\",\"container\",\"devops\"]}}],\"tagName\":\"docker\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tags-docker.json\n// module id = 369\n// module chunks = 197808841186072"],"sourceRoot":""}